name: Tests

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "master"
      - "dev"
      - "develop"
      - "feature/**"
      - "bugfix/**"
      - "hotfix/**"
      - "support/**"
    paths:
      - "lib/**.dart"
      - "test/**.dart"
      - "example/**.dart"
      - .github/workflows/*.yml
      - "pubspec.yaml"
  pull_request:
    branches:
      - "main"
      - "master"
      - "dev"
      - "develop"
      - "feature/**"
      - "bugfix/**"
      - "hotfix/**"
      - "support/**"
    paths:
      - "lib/**.dart"
      - "test/**.dart"
      - "example/**.dart"
      - .github/workflows/*.yml
      - "pubspec.yaml"

jobs:
  tests:
    name: "Tests"
    runs-on: ubuntu-latest
    #runs-on: ${{ matrix.os }}
    #strategy:
    #  matrix:
    #    os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        working-directory: ./
    container:
      image: dart:stable
    env:
      cache-name: cache-spinify-package
    timeout-minutes: 15
    steps:
      - name: 🚂 Get latest code
        id: checkout
        uses: actions/checkout@v4

      - name: 📤 Restore pub modules
        id: cache-spinify-package-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            $PWD/.pub_cache/
          key: ${{ runner.os }}-spinify-${{ env.cache-name }}-${{ hashFiles('**/pubspec.yaml') }}

      - name: 🗄️ Export pub cache directory
        id: export-pub-cache
        timeout-minutes: 1
        run: |
          export PUB_CACHE=$PWD/.pub_cache/
          export PATH="$PATH":"$HOME/.pub-cache/bin"

      - name: 👷 Install Dependencies
        id: install-dependencies
        timeout-minutes: 1
        run: dart pub get --no-example

      - name: 📥 Save pub modules
        id: cache-spinify-package-save
        uses: actions/cache/save@v4
        with:
          path: |
            $PWD/.pub_cache/
          key: ${{ runner.os }}-spinify-${{ env.cache-name }}-${{ hashFiles('**/pubspec.yaml') }}

      - name: 🧪 Run tests
        id: run-tests
        timeout-minutes: 10
        run: |
          dart pub global activate coverage
          dart pub global run coverage:test_with_coverage -fb -o coverage -- \
            --platform vm --compiler=kernel --coverage=coverage \
            --reporter=github --file-reporter=json:coverage/tests.json \
            --timeout=10m --concurrency=12 --color \
              test/unit_test.dart

      - name: 🔍 Format coverage
        id: format-coverage
        timeout-minutes: 1
        run: |
          mv coverage/lcov.info coverage/lcov.base.info
          lcov -r coverage/lcov.base.info -o coverage/lcov.base.info "lib/src/protobuf/client.*.dart" "lib/**/*.g.dart"
          mv coverage/lcov.base.info coverage/lcov.info
          lcov --list coverage/lcov.info

      - name: 📥 Upload coverage to Codecov
        id: upload-coverage
        timeout-minutes: 2
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
